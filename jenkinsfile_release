/*
* This pipeline script was created manually based on scripts created by jenkins-build-creator.
*
*/
@Library('integration-pipeline-library@master')
import com.synopsys.integration.Constants

properties(
    [
        limitBuildsToKeep(),
        disableConcurrentBuilds(), 
        parameters(
            [
                releaseCheckbox(),
                releaseCommitMessage(),
                selectBranch('origin/main')
            ]
        )
    ]
)

pipeline {
    agent {
        label 'integrations'
    }
    stages {
        stage('Git') {
            steps {
                gitCheckoutExportVariables('https://github.com/synopsys-sig/detect-action.git')
            }
        }
        stage('Release') {
            when {
                allOf {
                    expression { return params.RUN_RELEASE }
                    not { branch 'main' }
                }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: GitStage.DEFAULT_CREDENTIALS_ID, passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    sh "git branch -u origin/${env.GIT_LOCAL_BRANCH}"
                    sh "git remote set-url origin https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/synopsys-sig/detect-action.git"
                }
                sh 'npm ci'
                sh "npm version ${env.GIT_LOCAL_BRANCH}"
                archiveArtifacts 'dist/*.js*'
            }
        }
    }
    post {
        failure {
            emailFailure(Constants.CENTRAL_INTEGRATIONS_TEAM_EMAIL)
        }
        fixed {
            emailFixed(Constants.CENTRAL_INTEGRATIONS_TEAM_EMAIL)
        }
    }
}
